variables:
  DEBIAN_FRONTEND: noninteractive
  APT_GET_INSTALL: "apt-get install -q -y"

stages:
  - pre
  - build
  - test
  - deploy

pre-commit_alpine:
  stage: pre
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  script:
    - date
    - cat /etc/os-release
    - apk add --no-cache bash gcc git musl-dev npm py3-pip python3-dev
    - pip install pre-commit
    # run pre-commit
    - pre-commit --version
    - pre-commit run --all-files

pycodestyle_alpine:
  stage: pre
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  script:
    - date
    - cat /etc/os-release
    - apk add --no-cache py3-pycodestyle
    # check PEP 8 code style (pycodestyle was formerly called pep8)
    - pycodestyle --version
    - pycodestyle --show-source --show-pep8 --statistics $(find -name "*.py")

pylint_alpine:
  stage: pre
  image:
    # https://hub.docker.com/_/alpine
    name: alpine:latest
  script:
    - date
    - cat /etc/os-release
    - apk add --no-cache py3-pylint
    # run pylint
    - pylint --version
    - pylint --persistent n $(find -name "*.py")

pylint_debian:
  stage: pre
  image:
    # https://hub.docker.com/_/debian
    name: debian:latest
  script:
    - date
    - cat /etc/os-release
    - apt-get update
    - $APT_GET_INSTALL pylint
    # run pylint
    - pylint --version
    - pylint --persistent n $(find -name "*.py")

.test_template: &test_template
    - ./test/test1
    - ./test/test2
    - ./test/test3
    - rm -rf ~/git-data
    - ln -s $(pwd)/example_config.cfg ~/.file_hook_server_timestamping.cfg
    - ./test/test1
    - ./test/test2
    - ./test/test3
    - cat /tmp/file_hook_server_timestamping.log

.debian_based_test_template: &debian_based_test_template
  stage: test
  script:
    - date
    - cat /etc/os-release
    - apt-get update
    - $APT_GET_INSTALL git gpg python3
    # run tests
    - *test_template

test_ubuntu_20.04:
  image:
    # https://hub.docker.com/_/ubuntu
    name: ubuntu:20.04
  <<: *debian_based_test_template

test_ubuntu_22.04:
  image:
    # https://hub.docker.com/_/ubuntu
    name: ubuntu:22.04
  <<: *debian_based_test_template

test_ubuntu_latest:
  image:
    # https://hub.docker.com/_/ubuntu
    name: ubuntu:latest
  <<: *debian_based_test_template

test_debian_11:
  image:
    # https://hub.docker.com/_/debian
    name: debian:11
  <<: *debian_based_test_template

test_debian_12:
  image:
    # https://hub.docker.com/_/debian
    name: debian:12
  <<: *debian_based_test_template

test_debian_latest:
  image:
    # https://hub.docker.com/_/debian
    name: debian:latest
  <<: *debian_based_test_template

test_almalinux_latest:
  image:
    # https://hub.docker.com/_/almalinux
    # almalinux needs support for x86-64-v2 (cpu flag sse4_2)
    name: almalinux:latest
  stage: test
  script:
    - date
    - cat /etc/os-release
    - yum -y install git
    # run tests
    - *test_template

test_almalinux_8-minimal:
  image:
    # https://hub.docker.com/_/almalinux
    name: almalinux:8-minimal
  stage: test
  script:
    - date
    - cat /etc/os-release
    - microdnf -y install git python3
    # run tests
    - *test_template

test_almalinux_9-minimal:
  image:
    # https://hub.docker.com/_/almalinux
    name: almalinux:9-minimal
  stage: test
  script:
    - date
    - cat /etc/os-release
    - microdnf -y install git python3
    # run tests
    - *test_template

test_almalinux_minimal:
  image:
    # https://hub.docker.com/_/almalinux
    name: almalinux:minimal
  stage: test
  script:
    - date
    - cat /etc/os-release
    - microdnf -y install git python3
    # run tests
    - *test_template

test_opensuse_leap_latest:
  image:
    # https://hub.docker.com/r/opensuse/leap
    name: opensuse/leap:latest
  stage: test
  script:
    - date
    - cat /etc/os-release
    - zypper --non-interactive install git python3
    # run tests
    - *test_template
