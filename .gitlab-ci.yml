variables:
  DEBIAN_FRONTEND: noninteractive
  APT_GET_INSTALL: "apt-get install -q -y"

stages:
  - pre
  - build
  - test
  - deploy

.display_env:
  before_script:
    - date
    - uname -a
    - cat /etc/os-release

pre-commit:
  stage: pre
  image:
    name: alpine:edge
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  extends: .display_env
  script:
    - apk add --no-cache git npm pre-commit shellcheck
    - pre-commit --version
    - pre-commit run --all-files

pycodestyle:
  stage: pre
  image:
    name: alpine:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  extends: .display_env
  script:
    - apk add --no-cache py3-pycodestyle
    - pycodestyle --version
    - pycodestyle --show-source --show-pep8 --statistics .

pylint_alpine:
  stage: pre
  image:
    name: alpine:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  extends: .display_env
  script:
    - apk add --no-cache py3-pylint
    - pylint --version
    - pylint $(find -name "*.py")

pylint_debian:
  stage: pre
  image:
    name: debian:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  extends: .display_env
  script:
    - apt-get update
    - $APT_GET_INSTALL pylint
    - pylint --version
    - pylint --persistent n $(find -name "*.py")

ruff:
  stage: pre
  image:
    name: alpine:edge
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  extends: .display_env
  script:
    - apk add --no-cache ruff
    - ruff check --unsafe-fixes --diff || echo "!!! todo !!!"
    - ruff check --output-format=full

.test_template: &test_template
    - ./test/test1
    - ./test/test2
    - ./test/test3
    - rm -rf ~/git-data
    - ln -s $(pwd)/example_config.cfg ~/.file_hook_server_timestamping.cfg
    - ./test/test1
    - ./test/test2
    - ./test/test3
    - cat /tmp/file_hook_server_timestamping.log

.debian_based_test_template: &debian_based_test_template
  stage: test
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  extends: .display_env
  script:
    - apt-get update
    - $APT_GET_INSTALL git gpg python3
    # run tests
    - *test_template

.almalinux_minimal_based_test_template: &almalinux_minimal_based_test_template
  stage: test
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  extends: .display_env
  script:
    - microdnf -y install git python3
    # run tests
    - *test_template

test_ubuntu_20.04:
  image:
    name: ubuntu:20.04
  <<: *debian_based_test_template

test_ubuntu_22.04:
  image:
    name: ubuntu:22.04
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  <<: *debian_based_test_template

test_ubuntu_24.04:
  image:
    name: ubuntu:24.04
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  <<: *debian_based_test_template

test_ubuntu_latest:
  image:
    name: ubuntu:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  <<: *debian_based_test_template

test_debian_11:
  image:
    name: debian:11
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  <<: *debian_based_test_template

test_debian_12:
  image:
    name: debian:12
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  <<: *debian_based_test_template

test_debian_latest:
  image:
    name: debian:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  <<: *debian_based_test_template

test_almalinux_latest:
  stage: test
  image:
    # almalinux needs support for x86-64-v2 (cpu flag sse4_2)
    name: almalinux:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  extends: .display_env
  script:
    - yum -y install git
    # run tests
    - *test_template

test_almalinux_8-minimal:
  image:
    name: almalinux:8-minimal
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  <<: *almalinux_minimal_based_test_template

test_almalinux_9-minimal:
  image:
    name: almalinux:9-minimal
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  <<: *almalinux_minimal_based_test_template

test_almalinux_minimal:
  image:
    name: almalinux:minimal
  <<: *almalinux_minimal_based_test_template

test_opensuse_leap_latest:
  stage: test
  image:
    name: opensuse/leap:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  extends: .display_env
  script:
    - zypper --non-interactive install git python3
    # run tests
    - *test_template

trigger_deploy2zenodo:
  # https://gitlab.com/deploy2zenodo/deploy2zenodo#triggered-workflow
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  image:
    name: alpine:latest
  script:
    - apk add --no-cache curl
    - curl -X POST --fail -F token="${trigger_token:?}" -F ref=main "${trigger_url:?}" -F "variables[committag]=$CI_COMMIT_TAG" -F "variables[projectname]=$CI_PROJECT_NAME"
